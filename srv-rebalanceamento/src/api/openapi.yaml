openapi: 3.0.3
info:
  title: API Rebalanceamento
  description: "API para manter portifólio de ativos, carteiras, despesas e contas\
    \ no mongodb"
  version: 1.0.0
servers:
- url: http://localhost:4201/api/v1
tags:
- name: Health
  description: Endpoints úteis para verificar saúde da aplicação
- name: Seguranca
  description: Endpoints de segurança
- name: Despesa
  description: CRUD para definição de despesas
- name: Carteira
  description: CRUD para definição de carteiras
- name: Conta
  description: CRUD para definição de contas
paths:
  /health-check:
    get:
      x-swagger-router-controller: Health
      operationId: healthCheckGET
      tags:
      - Health
      responses:
        "200":
          description: Health status
          content:
            application/json:
              schema:
                type: object
  /auth:
    post:
      x-swagger-router-controller: Seguranca
      operationId: authPOST
      tags:
      - Seguranca
      summary: Autentica um serviço
      description: Retorna um token válido para as futuras requisições
      parameters:
      - name: X-API-KEY
        in: header
        description: Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Jwt Token
          content:
            text/plain:
              schema:
                type: string
                x-content-type: application/json
        "400":
          description: The specified resource is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
  /despesa:
    get:
      x-swagger-router-controller: Despesa
      operationId: despesaGET
      tags:
      - Despesa
      summary: Lista as despesas
      description: Lista as despesas programadas do ano
      parameters:
      - in: query
        name: mes
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 12
      - in: query
        name: pago
        required: false
        description: Se informado, filtra apenas as despesas pagas
        schema:
          type: boolean
      - in: query
        name: categoria
        required: false
        description: Filtra pela categoria
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Despesa'
                x-content-type: application/json
      security:
      - bearerAuth:
        - write:domain
        - read:domain
    post:
      x-swagger-router-controller: Despesa
      operationId: despesaPOST
      tags:
      - Despesa
      summary: Adiciona uma nova despesa
      description: Adiciona uma nova despesa
      requestBody:
        description: Cria uma nova despesa
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Despesa'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Despesa'
        "400":
          description: The specified resource is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: The specified resource is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth:
        - write:domain
        - read:domain
    put:
      x-swagger-router-controller: Despesa
      operationId: despesaPUT
      tags:
      - Despesa
      summary: Atualiza uma despesa
      description: Atualiza uma despesa identificada pelo seu id
      requestBody:
        description: Dados da despesa
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Despesa'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Despesa'
        "400":
          description: The specified resource is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: The specified resource is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth:
        - write:domain
        - read:domain
  /despesa/id/{despesaId}:
    parameters:
    - name: despesaId
      in: path
      description: ID da despesa
      required: true
      style: simple
      explode: false
      schema:
        type: string
    get:
      x-swagger-router-controller: Despesa
      operationId: despesaIdGET
      tags:
      - Despesa
      summary: Busca os dados de uma despesa pelo Id
      description: Returna uma única despesa
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Despesa'
        "400":
          description: The specified resource is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth:
        - write:domain
        - read:domain
    delete:
      x-swagger-router-controller: Despesa
      operationId: despesaIdDELETE
      tags:
      - Despesa
      summary: Remove uma nova despesa
      description: Remove uma nova despesa
      responses:
        "400":
          description: The specified resource is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: The specified resource is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth:
        - write:domain
        - read:domain
  /ativo:
    get:
      x-swagger-router-controller: Carteira
      operationId: ativoGET
      tags:
      - Carteira
      summary: Lista os ativos disponíveis
      description: Lista os ativos cadastrados
      parameters: 
      - in: query
        name: classe
        required: false
        schema:
          $ref: '#/components/schemas/Classe'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ativo'
                x-content-type: application/json
      security:
      - bearerAuth:
        - write:domain
        - read:domain
    post:
      x-swagger-router-controller: Carteira
      operationId: ativoPOST
      tags:
      - Carteira
      summary: Adiciona um ativo
      description: Adiciona um ativo ao portifólio
      requestBody:
        description: Dados do Ativo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ativo'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ativo'
        "400":
          description: The specified resource is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: The specified resource is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth:
        - write:domain
        - read:domain
    put:
      x-swagger-router-controller: Carteira
      operationId: ativoPUT
      tags:
      - Carteira
      summary: Atualiza um ativo
      description: Atualiza um ativo identificado pelo seu id
      requestBody:
        description: Dados do ativo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ativo'
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: The specified resource is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: The specified resource is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth:
        - write:domain
        - read:domain
  /ativo/id/{ativoId}:
    parameters:
    - name: ativoId
      in: path
      description: Id do ativo
      required: true
      style: simple
      explode: false
      schema:
        type: string
    get:
      x-swagger-router-controller: Carteira
      operationId: ativoIdGET
      tags:
      - Carteira
      summary: Obtém um ativo
      description: Obtém um ativo pelo seu id
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ativo'
        "400":
          description: The specified resource is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth:
        - write:domain
        - read:domain
    delete:
      x-swagger-router-controller: Carteira
      operationId: ativoIdDELETE
      tags:
      - Carteira
      summary: Remove um ativo
      description: Remove um ativo identificado pelo seu id
      responses:
        "200":
          description: Successful operation
        "400":
          description: The specified resource is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: The specified resource is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth:
        - write:domain
        - read:domain
  /carteira:
    get:
      x-swagger-router-controller: Carteira
      operationId: carteiraGET
      tags:
      - Carteira
      summary: Obtém lista de carteiras do portifólio
      description: Recebe um array de Carteira
      parameters: 
      - in: query
        name: moeda
        required: false
        schema:
          $ref: '#/components/schemas/Moeda'
      - in: query
        name: classe
        required: false
        schema:
          $ref: '#/components/schemas/Classe'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Carteira'
                x-content-type: application/json
      security:
      - bearerAuth:
        - write:domain
        - read:domain
    post:
      x-swagger-router-controller: Carteira
      operationId: carteiraPOST
      tags:
      - Carteira
      summary: Adiciona uma carteira
      description: Adiciona uma carteira ao portifólio
      requestBody:
        description: Dados da carteira
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Carteira'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carteira'
        "400":
          description: The specified resource is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: The specified resource is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth:
        - write:domain
        - read:domain
    put:
      x-swagger-router-controller: Carteira
      operationId: carteiraPUT
      tags:
      - Carteira
      summary: Atualiza uma carteira
      description: Atualiza uma carteira identificada pelo seu id
      requestBody:
        description: Dados da carteira
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Carteira'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carteira'
        "400":
          description: The specified resource is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: The specified resource is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth:
        - write:domain
        - read:domain
  /carteira/{carteiraId}:
    parameters:
    - name: carteiraId
      in: path
      description: Id da carteira
      required: true
      style: simple
      explode: false
      schema:
        type: string
    get:
      x-swagger-router-controller: Carteira
      operationId: carteiraIdGET
      tags:
      - Carteira
      summary: Obtém uma carteira
      description: Obtém uma carteira identificada pelo seu id
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carteira'
        "400":
          description: The specified resource is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: The specified resource is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth:
        - write:domain
        - read:domain
    delete:
      x-swagger-router-controller: Carteira
      operationId: carteiraIdDELETE
      tags:
      - Carteira
      summary: Remove uma carteira
      description: Remove uma carteira identificada pelo seu id
      responses:
        "200":
          description: Successful operation
        "400":
          description: The specified resource is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: The specified resource is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth:
        - write:domain
        - read:domain
  /carteira/{carteiraId}/alocacao:
    parameters:
    - name: carteiraId
      in: path
      description: Id da carteira
      required: true
      style: simple
      explode: false
      schema:
        type: string
    get:
      x-swagger-router-controller: Carteira
      operationId: carteiraIdAlocacaoGET
      tags:
      - Carteira
      summary: Obtém as alocações dos ativos de uma carteira
      description: Obtém os ativos de uma carteira identificada pelo seu id
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarteiraAtivos'
        "400":
          description: The specified resource is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: The specified resource is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth:
        - write:domain
        - read:domain
    post:
      x-swagger-router-controller: Carteira
      operationId: carteiraIdAlocacaoPOST
      tags:
      - Carteira
      summary: Atualiza as alocações de um conjunto de ativos em uma carteira
      description: Atualiza as alocações de um conjunto de ativos em uma carteira
        identificada pelo seu id
      requestBody:
        description: Dados das alocações
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarteiraAtivos'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarteiraAtivos'
        "400":
          description: The specified resource is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: The specified resource is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth:
        - write:domain
        - read:domain
  /conta:
    get:
      x-swagger-router-controller: Conta
      operationId: contaGET
      tags:
      - Conta
      summary: Obtém lista de contas do portifólio
      description: Recebe um array de Conta
      parameters: 
      - in: query
        name: moeda
        required: false
        schema: 
          $ref: '#/components/schemas/Moeda'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Conta'
                x-content-type: application/json
      security:
      - bearerAuth:
        - write:domain
        - read:domain
    post:
      x-swagger-router-controller: Conta
      operationId: contaPOST
      tags:
      - Conta
      summary: Adiciona uma conta
      description: Adiciona uma conta ao portifólio
      requestBody:
        description: Dados da conta
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Conta'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conta'
        "400":
          description: The specified resource is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: The specified resource is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth:
        - write:domain
        - read:domain
    put:
      x-swagger-router-controller: Conta
      operationId: contaPUT
      tags:
      - Conta
      summary: Atualiza uma conta
      description: Atualiza uma conta identificada pelo seu id
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conta'
        "400":
          description: The specified resource is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: The specified resource is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth:
        - write:domain
        - read:domain
  /conta/id/{contaId}:
    parameters:
    - name: contaId
      in: path
      description: Id da conta
      required: true
      style: simple
      explode: false
      schema:
        type: string
    get:
      x-swagger-router-controller: Conta
      operationId: contaIdGET
      tags:
      - Conta
      summary: Obtém uma conta
      description: Obtém uma conta identificada pelo seu id
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carteira'
        "400":
          description: The specified resource is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: The specified resource is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth:
        - write:domain
        - read:domain
    delete:
      x-swagger-router-controller: Conta
      operationId: contaIdDELETE
      tags:
      - Conta
      summary: Remove uma conta
      description: Remove uma conta identificada pelo seu id
      responses:
        "200":
          description: Successful operation
        "400":
          description: The specified resource is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: The specified resource is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth:
        - write:domain
        - read:domain
components:
  schemas:
    Moeda:
      type: string
      enum:
      - REAL
      - DOLAR
      - USDT
    Classe:
      type: string
      enum:
      - MOEDA
      - ACAO
      - FII
      - INTERNACIONAL
      - CRYPTO
      - ALTCOINS
      - CDB
      - RF
    Despesa:
      type: object
      required:
        - descricao
        - valor
        - periodicidade
        - dataVencimento
        - liquidacao
      properties:
        _id:
          type: string
          description: Identificador da Despesa
        descricao:
          maxLength: 200
          minLength: 3
          type: string
          example: Impostos
        valor:
          type: number
          format: double
          example: 202.1
        periodicidade:
          type: string
          example: SMN
          enum:
            - SMN
            - Q
            - M
            - T
            - SMT
            - A
            - U
        dataVencimento:
          type: string
          format: date
          example: 2020-01-01
        dataFinal:
          type: string
          format: date
          example: 2020-01-01
        dataPagamento:
          type: string
          format: date
          example: 2020-01-01
        origem:
          type: string
          minLength: 8
          description: Referência à despesa de origem
        categoria:
          type: string
          example: Custo Fixo
        liquidacao:
          type: string
          example: CONTA
          enum:
            - CONTA
            - CARTAO
            - OUTROS
        contaLiquidacao:
          type: string
          minLength: 8
          description: Referência à conta de liquidação

    Carteira:
      required:
      - classe
      - moeda
      - nome
      - objetivo
      type: object
      properties:
        _id:
          type: string
          description: Id da Carteira
        nome:
          maxLength: 200
          minLength: 3
          type: string
          description: Nome da carteira
          example: Ações
        moeda:
          type: string
          example: REAL
          enum:
          - REAL
          - DOLAR
          - USDT
        objetivo:
          type: number
          description: Percentual da alocação desta carteira no portifólio
          format: double
          example: 0.01
        classe:
          type: string
          example: ACAO
          enum:
          - MOEDA
          - ACAO
          - FII
          - INTERNACIONAL
          - CRYPTO
          - ALTCOINS
          - CDB
          - RF
      example:
        objetivo: 0.01
        classe: ACAO
        moeda: REAL
        nome: Ações
        id: 100
    Ativo:
      required:
      - ativo
      - classe
      - moeda
      - setor
      - simbolo
      type: object
      properties:
        _id:
          type: string
          description: Id do Ativo
        ativo:
          minLength: 1
          type: string
          example: GOOGLE
        moeda:
          type: string
          example: REAL
          enum:
          - REAL
          - DOLAR
          - USDT
        simbolo:
          minLength: 1
          type: string
          example: NYSE:GOOGL
        descricao:
          minLength: 3
          type: string
          example: Google na NYSE
        setor:
          minLength: 3
          type: string
          example: Tecnologia
        classe:
          type: string
          example: ACAO
          enum:
          - MOEDA
          - ACAO
          - FII
          - INTERNACIONAL
          - CRYPTO
          - ALTCOINS
          - CDB
          - RF
      example:
        simbolo: NYSE:GOOGL
        setor: Tecnologia
        ativo: GOOGLE
        classe: ACAO
        moeda: REAL
        id: 100
        descricao: Google na NYSE
    CarteiraAtivos:
      type: array
      items:
        type: object
        required: 
          - ativoId
          - objetivo
        properties:
          ativoId:
            type: string
            description: Id do ativo
            example: 100
          objetivo:
            type: number
            format: double
            description: Percentual do objetivo do ativo na carteira
            example: 0.5
    Conta:
      required:
      - conta
      - moeda
      - saldo
      type: object
      properties:
        _id:
          type: string
        conta:
          maxLength: 50
          minLength: 2
          type: string
          example: Itaú
        saldo:
          type: number
          format: double
          example: 150.23
        moeda:
          type: string
          enum:
          - REAL
          - DOLAR
          - USDT
      example:
        moeda: REAL
        conta: Itaú
        id: 15
        saldo: 150.23
    Error:
      type: object
  responses:
    ValidationError:
      description: The specified resource is not valid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidRequest:
      description: The specified resource is invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  requestBodies:
    Carteira:
      description: Carteira para ser adicionada ao portifólio
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Carteira'
    Ativo:
      description: Ativo para ser adicionado ao portifólio
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Ativo'
    Conta:
      description: Conta para ser adicionada ao portifólio
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Conta'
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: X-API-KEY
      in: header
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
